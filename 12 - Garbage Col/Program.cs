Сборщик мусор - автоматический менеджер контроля памяти в .net

    0 - новые объекты которые только были созданы
    1 - объекты которые пережили первую сборку мусора
    2 - долгоживущие объекты (пережили больше 2 сборок мусора)

    чем ниже поколение, тем вероятнее удаление, чем выше - вероятнее останется

    Large Object Heap -отдельная область памяти, куда помещаются объекты которые весят больше 85кб

    Дефрагментация:
    1) маркировка - проходися по графу объектов, отмечает их как достижимые и недостижимые
    2) перемещение - сборщик мусора создает таблицу переадресации, где указано куда и что переносить
    3) уплотнение - перемещение объектов на новые адреса

    Дефрагментация не проводиться из-за того что дорого и долго

    Граф объектов начинается с корней приложения (точки входа через которые сборщик начинает анализ графа объектов)

    Есть неуправляемая память, сборщик мусора не имеет контроля, поэтому это надо явно прописывать в деструкторе(Кинализатор)


Делигаты и события
    Делигат - специальный тип, который предоставляет ссылки на методы с определенным списком параметров и типом возвращаемого значения
    В кратце - хранят ссылки на методы
    Делигат может хранить массив ссылок
    можно использовать ?.Invoke("Привет")

    Событие(ивент) - если что-то происходит, то привязанным шнягам приходит уведомление и они выполняются
    Создаем делигат, зачем пишем event (делигат) название события


    Мы не можем объявлять делегат в интерфейсе, событие - может
    Можно вызвать делегат вне класса в котором он создан(плохо, можно очистить подписчиков), события предохранены от такой ситуации

